ТЕСТ-КЕЙС - это набор условий или параметров, с помощью которых тестировщик будет определять, удовлетворяет ли тестируемая система требованиям и правильно ли она работает.

Проще говоря, тест-кейс - это набор хорошо продуманных и понятных шагов (действий), выполняемых для проверки конкретной функции или функциональности программного обеспечения. Помните, «хорошо продуманные» и «понятные».

Процесс разработки тест-кейсов может помочь найти ошибки в требованиях или проекте приложения.

Из чего состоит тест-кейс:

ID тест-кейса

Это уникальный номер тест-кейсов в системе управления тестированием или в документе.  Как правило, все современные системы управления тестированием, такие как Jira, TestRail и Zephyr, автоматически присваивают идентификатор только что созданному тест-кейсу. Таким образом, исключается возможность ошибиться с присвоением уникального номера.

Но, следует отметить, что в некоторых проектах все еще используется Excel для тестирования.  Вот почему вы всегда должны помнить правило: «В вашей системе управления тестированием не должно быть тест-кейсов с одинаковым идентификатором.  Даже, если это тест-кейсы из уже завершённого проекта».

Название тест-кейса

Чёткое название является обязательным атрибутом для эффективного тест-кейса. Что это значит? Ключевые особенности четкого названия: оно должно быть понятным и коротким.  Кроме того, название тест-кейса должно содержать название модуля приложения или функциональную область, которую вы собираетесь проверять.

Давайте представим, что у нас есть задача проверить, что произойдет, если мы введем недопустимые символы, такие как $, &, * в поле «электронная почта» на форме авторизации в приложении Koel. В соответствии с вышеупомянутыми принципами название тест-кейса должно выглядеть так: «Поле электронной почты |  неверный ввод на форме авторизации».

Давайте рассмотрим пример нечёткого названия. «В поле «Электронная почта» вводятся символы «$ & *» на форме входа в приложение «Koel».  Здесь у нас есть как минимум две ошибки.

Слишком длинное название.  Нет необходимости упоминать «приложение Koel», потому что этот тест-кейс является частью плана тестирования для этого приложения. Поэтому все тест-кейсы связаны с «приложением Koel».
Упоминание специальных символов «$ & *».  Другие недопустимые символы также могут быть введены для выполнения этого тест-кейса.  Поэтому «недопустимые символы» более подходящее определение для этого названия.

Описание тест-кейса 

Перед началом тестирования необходимо указать все детали, необходимые для конкретного тест-кейса. Это: тестовые данные, которые будут использоваться, предусловия (предварительные шаги) и шаги.

Если вы в описании или внутри конкретного шага тест-кейса укажете тестовые данные, которые применены для этого тест-кейса всегда и везде, вы облегчите жизнь не только себе, но и вашим коллегам-тестировщикам. Не пишите тест-кейсы только для себя.

Предусловия (предварительные шаги) описывают разные зависимости, необходимые для выполнения теста:

Любые специальные настройки, которые должны быть сделаны перед выполнением тест-кейса.
Зависимость от других тест-кейсов: нужно ли запускать тест-кейс до/после какого-либо другого тест-кейса.
Зависимость от данных пользователя: с какой страницы пользователь должен начать навигацию;  должен ли пользователь войти в систему.

Шаги - это путь к ожидаемому результату.  Еще одно, о чем следует помнить, шаги в хорошем тест-кейсе хорошо продуманы и понятны.  Эти два пункта являются основой для понимания того, как следует составлять шаги для тест-кейсов.

Основные свойства хорошо продуманных шагов:

Оптимальное количество шагов.  Нет необходимости создавать дополнительные шаги. То, что очевидно для вас, не может быть понятным для ваших коллег.
Один тест-кейс покрывает только одну независимую функциональность.  Неправильно проверять разные функциональности в одном тест-кейсе.
Шаги должны быть легко исполняемыми.
Шаги должны описывать не просто общую функциональность, в шагах должно быть описание конкретных действий, которые должны быть протестированы. 

Основные свойства понятных шагов:

Шаги должны быть только по делу. Не нужно писать сочинение, чтобы описать шаги.
Четкая формулировка.  Избегайте использования двусмысленности в шагах тест-кейсов.
Должны быть понятны даже неопытным. Вашим коллегам, которые, могут быть менее опытны, чем вы, должно быть понятно, как выполнять каждый шаг.
